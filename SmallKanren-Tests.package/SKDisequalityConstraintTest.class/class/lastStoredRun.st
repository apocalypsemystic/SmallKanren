history
lastStoredRun
	^ ((Dictionary new) add: (#timeStamp->(DateAndTime basicNew instVarAt: 1 put: 84663; instVarAt: 2 put: (Duration seconds: -14400 nanoSeconds: 0); instVarAt: 3 put: 2459068; instVarAt: 4 put: 318641000; yourself)); add: (#passed->((Set new) add: #testNormalizeConjunctionFree; add: #testPassOnApplyPairReverse; add: #testRun; add: #testSimplifyCons; add: #testEquals; add: #testMergeSingleWithDisjoint; add: #testConstructSingle; add: #testMergeDisjoint; add: #testSimplifyEmptyCons; add: #testDisequalitiesEqual; add: #testMergeSingle; add: #testEmptyConstraint; add: #testMergeDisjointWithSingle; add: #testNormalizeDisjunctionOfConjunctions; add: #testApplyImpossiblePair; add: #testPassOnApply; add: #testPassOnApplyPair; add: #testConstructConjoined; add: #testConstructSingleFree; add: #testNormalizeConjunction; add: #testFailOnApplyFree; add: #testFailOnApply; add: #testFailOnApplyPair; add: #testPassOnApplyFreePair; add: #testApplyTwoFree; add: #testConstructDisjoined; add: #testNormalizeDisjunction; add: #testSimplifyPrimitive; add: #testEmptyStore; add: #testApplyTwo; add: #testApplyFree; add: #testApplyPair; add: #testConstructConjoinedFree; add: #testConstructDisjoinedFree; add: #testPrintOn; yourself)); add: (#failures->((Set new))); add: (#errors->((Set new) add: #testApplyTwoMergeTwo; add: #testDisjunctionSatisfied; add: #testPassOnUnifyFree; add: #testFreeDisjunctionFails; add: #testAddThreePassFree; add: #testApplyTwoPairs; add: #testApplyTwoFailSecond; add: #testPassOnUnifyPair; add: #testPairReduces; add: #testMergeOnUnifyFree; add: #testApplyTwoFailFirst; add: #testPassOnUnifyPairReverse; add: #testFreeDisjunctionReduces; add: #testApplyList; add: #testFailOnUnifyFree; add: #testAddTwoPassFree; add: #testDisjoinedMerge; add: #testFailOnUnify; add: #testNormalizeSingle; add: #testPassOnUnifyTriple; yourself)); yourself)